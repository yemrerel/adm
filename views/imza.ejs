<script src="/public/js/arkJS.js"></script>

  <style>
        .drop-css {
            background-color: white;
            width: 100%;
            font-size: 1.5vh;
            text-align: left;
        }

            .drop-css:hover {
                cursor: pointer;
            }

        .dropdown-menu > li > a {
            font-size: 1.5vh;
        }

        .dropdown {
            position: relative;
        }

        .dropdown-menu {
            position: absolute;
            top: 100%;
            left: 0;
            z-index: 1000;
            display: none;
            float: left;
            min-width: 160px;
            padding: 5px 0;
            margin: 2px 0 0;
            font-size: 14px;
            list-style: none;
            background-color: #fff;
            border: 1px solid #ccc;
            border: 1px solid rgba(0,0,0,0.15);
            border-radius: 4px;
            -webkit-box-shadow: 0 6px 12px rgba(0,0,0,0.175);
            box-shadow: 0 6px 12px rgba(0,0,0,0.175);
            background-clip: padding-box;
        }

        #cihazlar > li > a {
            text-decoration: none;
            margin-left: 13px;
            position: relative;
            color: black;
        }

        #sertifikalar > li > a {
            text-decoration: none;
            margin-left: 13px;
            position: relative;
            color: black;
        }
    </style>

    <input type="hidden" runat="server" id="hiddenPwSignerLicense" />
    <div id="loadingBar" class="loader loader-curtain" colorful data-curtain-text="Yükleniyor"></div>
    <!-- main -->
    <div class="main-agileinfo slider ">
        <div class="items-group">
            <div class="item agileits-w3layouts">
                <div class="block text main-agileits">
                    <span class="circleLight"></span>
                    <!-- login form -->
                    <div class="login-form loginw3-agile">
                        <div id="DataContainer" class="agile-row">
                            <div id="backHome" class="hidden-xs" onclick="location.href = 'AnaSayfa.aspx'">
                                <i class="fa fa-home" aria-hidden="true"></i>
                                <a href="AnaSayfa.aspx" class="button os-windows" style="color: white; text-decoration: none; line-height: 16px !important; height: 48px !important;">Örnek Projeler
                                </a>
                            </div>

                            
                                <h1>CAdES Dosya İmzalama Örneği</h1>
                            <div class="login-agileits-top">
                                <form action="#" method="post">
                                    <div class="form-group" style="margin: 2.8em 0 .5em;">
                                        <div class="dropdown" id="dropCihaz">
                                            <button data-toggle="dropdown" class="btn btn-default dropdown-toggle drop-css" type="button" id="dropdownCihazlar" aria-haspopup="true" aria-expanded="true">
                                                Cihaz Seçiniz..
                                                <span class="caret"></span>
                                            </button>
                                            <ul id="cihazlar" class="dropdown-menu" style="width: 100%;" aria-labelledby="dropdownMenu1"></ul>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="dropdown" id="dropSertifika">
                                            <button data-toggle="dropdown" class="btn btn-default dropdown-toggle drop-css" type="button" id="dropdownSertifikalar" aria-haspopup="true" aria-expanded="true">
                                                Sertifika Seçiniz..
                                                <span class="caret"></span>
                                            </button>
                                            <ul id="sertifikalar" class="dropdown-menu" style="width: 100%;" aria-labelledby="dropdownMenu2"></ul>
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <select class="form-control" id="signatureType">
                                            <option selected value="bes">BES İmza</option>
                                            <option value="est">EST İmza</option>
                                            <option value="xl">XL İmza</option>
                                            <option value="av2">AV2 İmza</option>
                                        </select>
                                    </div>
                                    <input type="password" class="password" name="pinCode" id="pinCode" placeholder="Pin Kodu" required="" />
                                    <label class="anim">
                                    </label>
                                    <input type="button" id="btnRefreshCards" class="btn btn-info" value="Yenile" style="margin-bottom:10px;">
                                    <input type="button" id="btnSignCAdESFile" value="İmzala">
                                    <input type="button" id="btnDownloadCAdES" value="İndir" style="margin-top: 10px; display: none;">
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- //main -->

    <script>

        ///////////////////////////////////////////////////////////////
        // DOCUMENT READY
        ///////////////////////////////////////////////////////////////
        $(document).ready(function () {
            // pwsigner nesnesi üzerinden ArkSigner lisansını set ediyoruz.

            pwsigner.setLicenseKey($('#hiddenPwSignerLicense').val());
            $('#loadingBar').attr("data-curtain-text", "ArkSigner'a bağlanılıyor...");
            $('#loadingBar').addClass("is-active");

            // ArkSigner Client uygulamasına erişim sağlıyoruz.
            pwsigner.initialize(onPWSigner_Initialized);
        });

        ///////////////////////////////////////////////////////////////
        //  MAIN INITIALIZATION BLOCK
        ///////////////////////////////////////////////////////////////

        pwsigner.appDownloadLink = "https://www.arksigner.com/indir";
        var transactionUUID = "";

        var demo = {
            texts: {
                SIGNING_DOCUMENT: 'İmzalanıyor'
            }
        }

        ////////////////////////////////////////////////////////////////
        //   ArkSigner RESPONSE CODE MESSAGES
        ////////////////////////////////////////////////////////////////
        var textMessages = [];

        textMessages[PWSigner.prototype.codes.RESPONSE_SUCCESSFUL] = 'İşlem başarı ile gerçekleştirilmiştir.';
        textMessages[PWSigner.prototype.codes.ERROR_UNDEFINED_ACTION] = 'Desteklenmeyen işlem';

        textMessages[PWSigner.prototype.codes.ERROR_NO_CLIENT] = 'Halk Bank e-İmza uygulamasına erişilememektedir. Halk Bank e-İmza uygulamasını yüklemiş olduğunuzdan emin olunuz. Yüklemediyseniz http://arksigner.com/indir adresinden indirebilirsiniz. Şayet kurmuş olmanıza rağmen bu hatayı alıyorsanız ağ ayarlarının kontrolü için sistem yöneticisi ile ya da Halk Bank e-İmza ekibi ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_INITIALIZE_SIGNER] = 'Halk Bank e-İmza Uygulaması Başlatılamamaktadır. Saatin yanında simge durumunda olan Halk Bank e-İmza menüsünden uygulamayı kapatabilir misiniz? İmza sırasında Halk Bank e-İmza tekrar otomatik olarak başlatılacaktır.';
        textMessages[PWSigner.prototype.codes.ERROR_LICENSE_EXPIRED] = 'Web uygulaması, geçersiz bir lisans üzerinden çalışmaktadır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_START_PWSIGNER_CLIENT] = 'Halk Bank e-İmza Uygulaması Başlatılamamaktadır. Saatin yanında simge durumunda olan Halk Bank e-İmza menüsünden uygulamayı kapatabilir misiniz? İmza sırasında Halk Bank e-İmza tekrar otomatik olarak başlatılacaktır.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_CERTIFICATE] = 'Kullanmak istediğiniz sertifika geçersizdir.';//Web uygulaması, geçersiz bir lisans üzerinden çalışmaktadır. Lütfen hizmet sağlayan ile iletişime geçiniz.
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_CERTIFICATE_SERIAL_NUMBER] = 'Kullanmış olduğunuz e-İmza kartı üzerindeki sertifika hatalıdır. Lütfen e-İmza kartını almış olduğunuz firma ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_NO_SIGNING_CERTIFICATE_FOUND] = 'Kullanmış olduğunuz e-İmza kartı üzerinde imza sertifikası bulunmamaktadır. Lütfen e-İmza kartını almış olduğunuz firma ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_NO_TERMINAL_FOUND] = 'Takılı herhangi bir akıllı kart bulunamamıştır. Şayet kartı takmış olmanıza rağmen gözükmüyorsa: - Kart okuyucunun USB 2.0’a takılı olduğundan - Kart okuyucunun içerisinde SIM boyutlu kartın doğru takıldığından - Kart okuyucunuzun sürücüsünün yüklü olduğundan emin olunuz.';
        textMessages[PWSigner.prototype.codes.ERROR_NO_TERMINAL_FOR_PROVIDED_SLOT_ID_AND_CARD_TYPE] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_SIGNER_IS_NOT_INITIALIZED] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen Halk Bank e-İmza ekibi ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_SMART_CARD_EXCEPTION] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen Halk Bank e-İmza ekibi ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_UNDEFINED_SIGNER_EXCEPTION] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen Halk Bank e-İmza ekibi ile iletişime geçiniz.';

        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_LOAD_POLICY_FILE] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_CMS_CONTENT_TO_SIGN] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_SET_SIGNING_TIME] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_LOGIN_TO_THE_SIGNER] = 'e-İmza Kartınıza erişilirken bir problem ile karşılaşılmıştır. Lütfen e-İmza Kartınızı çıkartıp başka bir USB portuna takınız. Sorunun devam etmesi durumunda lütfen bilgisayarınızı yeniden başlatınız.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_SIGN_CMS_DOCUMENT] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_LOGOUT_SIGNER] = 'Lütfen e-İmza Kartınızı çıkartıp başka bir USB portuna takınız. Sorunun devam etmesi durumunda lütfen bilgisayarınızı yeniden başlatınız.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_VALIDATE_CERTIFICATE] = 'Sertifikanızın geçerliliği doğrulanamamaktadır. Lütfen sertifikayı aldığını ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CERTIFICATE_REVOCATION_CHECK_FAILURE] = 'Sertifikanızın geçerliliği doğrulanamamaktadır. Lütfen sertifikayı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CERTIFICATE_SELF_CHECK_FAILURE] = 'Sertifikanızın geçerliliği doğrulanamamaktadır. Lütfen sertifikayı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CERTIFICATE_NO_TRUSTED_CERT_FOUND] = 'Sertifikanızın geçerliliği doğrulanamamaktadır. Lütfen sertifikayı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CERTIFICATE_PATH_VALIDATION_FAILURE] = 'Sertifikanızın geçerliliği doğrulanamamaktadır. Lütfen sertifikayı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CERTIFICATE_NOT_CHECKED] = 'Sertifikanızın geçerliliği doğrulanamamaktadır. Lütfen sertifikayı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_UNLICENSED_URL] = 'Web uygulaması, geçersiz bir lisans üzerinden çalışmaktadır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_PIN] = 'Hatalı PIN kodu girdiniz. Lütfen doğru PIN kodunu giriniz. NOT: 3 defadan fazla PIN kodunuzu hatalı girmeniz durumunda kartınız kilitlenecektir.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_SLOT_ID] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_RETRIEVE_LIST_OF_CERTIFICATES] = 'e-İmza kartınız üzerindeki sertifikalar listelenememektedir. Lütfen kartınızı çıkartıp farklı bir USB portuna takını ve tekrar deneyiniz. Sorunun devam etmesi durumunda ESHS firması ile iletişime geçiniz';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_LICENSE_FORMAT] = 'Web uygulaması, geçersiz bir lisans üzerinden çalışmaktadır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_LOAD_DRIVER] = 'Akıllı kart okuyucunuzun sürücüsü yüklenirken bir sorun ile karşılaşılmıştır. Lütfen Halk Bank e-İmza uygulamasını tekrar kurunuz. Sorun çözülmez ise eİmza kartını almış olduğunuz eİmza firması ile tekrar iletişime geçiniz.';


        textMessages[PWSigner.prototype.codes.ERROR_PIN_LOCKED] = 'e-İmza sertifikanız PIN kodunuzu üst üste 3’ten fazla hatalı girdiğiniz için kilitlenmiştir. Lütfen e-İmzanızı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_PIN_EXPIRED] = 'e-İmza sertifikanız PIN kodunuzu üst üste 3’ten fazla hatalı girdiğiniz için kilitlenmiştir. Lütfen e-İmzanızı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_DIGEST] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_NO_PUBLIC_KEY] = 'e-İmza firmasının hatalı sertifika yüklemesinden dolayı olur. e-İmza sertifikanızda sorun bulunmaktadır. Lütfen e-İmzanızı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_UNDEFINED_ACTION] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_CANNOT_FIND_MATCHING_PRIVATE_KEY] = 'e-İmza firmasının hatalı sertifika yüklemesinden dolayı olur. e-İmza sertifikanızda sorun bulunmaktadır. Lütfen e-İmzanızı aldığınız ESHS ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_XML_FORMAT] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_XML_SIGNATURE_TARGET] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_SIGNATURE_STRUCTURE] = 'İmza atılırken bir sorun ile karşılaşılmıştır. Lütfen hizmet sağlayan ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_INVALID_NONCE] = 'Ağ ayarlarının kontrolü için sistem yöneticisi ile ya da Halk Bank e-İmza ekibi ile iletişime geçiniz.';
        textMessages[PWSigner.prototype.codes.ERROR_NOT_A_TCKK_READER] = 'Takmış olduğunuz kart T.C. Kimlik Kartı değildir. Lütfen T.C. Kimlik Kartınızı takınız.';

        PWSIGNER_TEXT_MESSAGE_TITLE = "Bilgi";
        ///////////////////////////////////////////////////////////////
        //   METHODS
        //////////////////////////////////////////////////////////////

        function hexToBase64(str) {
            return btoa(String.fromCharCode.apply(null,
                str.replace(/\r|\n/g, "").replace(/([\da-fA-F]{2}) ?/g, "0x$1 ").replace(/ +$/, "").split(" "))
            );
        }

        function processErrorCode(code, json) {
            var text = textMessages[code];
            if (!text) {
                text = 'Tanımsız hata: ' + code;
            }
           console.log(text, "Uyarı");
            //alert(text);
        }

        function createHexString(arr) {
            var result = "";
            var z;

            for (var i = 0; i < arr.length; i++) {
                var str = arr[i].toString(16);

                z = 8 - str.length + 1;
                str = Array(z).join("0") + str;

                result += str;
            }

            return result;
        }

        ///////////////////////////////////////////////////////////////
        //   ArkSigner CALLBACK FUNCTIONS
        //////////////////////////////////////////////////////////////
        function onPWSigner_Initialized(code, json) {
            $('#loadingBar').removeClass("is-active");
            // check if the task is executed successfully
            if (code == PWSigner.prototype.codes.RESPONSE_SUCCESSFUL) {
                $('#loadingBar').attr("data-curtain-text", "Akıllı kartlar listeleniyor...");
                $('#loadingBar').addClass("is-active");
                pwsigner.smartCard.listTerminals(onPWSigner_ListTerminals, {});
            } else {

                $('#loadingBar').removeClass("is-active");
                processErrorCode(code, json);
            }
        }

          $(document).on('click', '#btnRefreshCards', function () {
            $('#cihazlar').empty();
            $('#sertifikalar').empty();

            $("#dropdownSertifikalar:first-child").text("");
            $("#dropdownSertifikalar:first-child").val("");

            $("#dropdownCihazlar:first-child").text("");
            $("#dropdownCihazlar:first-child").val("");

            pwsigner.smartCard.listTerminals(onPWSigner_ListTerminals, {});
        });
        function onPWSigner_ListTerminals(code, json) {
            if (code == PWSigner.prototype.codes.RESPONSE_SUCCESSFUL) {
                $('#loadingBar').removeClass("is-active");
                $('#loadingBar').attr("data-curtain-text", "Sertifikalar listeleniyor...");
                $('#loadingBar').addClass("is-active");
                var _terminals = pwsigner.parseJSON(json);

                $.each(_terminals, function (index, element) {
                    var val = element.slotId + "," + element.library;
                    var text = element.terminal;

                    $('#cihazlar').append('<li><a href="javascript:void(0);" name="' + Base64.decode(element.slotId) + ',' + Base64.decode(element.library) + '">' + Base64.decode(element.terminal) + '</a></li>');

                    $("#dropdownCihazlar:first-child").text(Base64.decode(element.terminal));
                    $("#dropdownCihazlar:first-child").val(Base64.decode(element.slotId) + ',' + Base64.decode(element.library));

                    pwsigner.smartCard.listCertificates(onPWSigner_ListCertificates, {
                        library: Base64.decode(element.library),
                        slotId: Base64.decode(element.slotId)
                    });

                });

                $(this).dropdown();

            }
            else {
                $('#loadingBar').removeClass("is-active");
                processErrorCode(code, json);
            }
        }

        function onPWSigner_ListCertificates(code, json) {
            if (code == PWSigner.prototype.codes.RESPONSE_SUCCESSFUL) {
                var _certificates = pwsigner.parseJSON(json);

                $('#loadingBar').removeClass("is-active");

                $(_certificates).each(function (index, element) {
                    $('#sertifikalar').append('<li><a href="javascript:void(0);" name="' + Base64.decode(element.serialNumber) +
                        '">' + Base64.decode(element.commonName) + '</a></li>');

                    if (index == 0) {
                        $("#dropdownSertifikalar:first-child").text(Base64.decode(element.commonName));
                        $("#dropdownSertifikalar:first-child").val(Base64.decode(element.serialNumber) + "," + hexToBase64(element.certificateHex));
                    }
                });

                $(this).dropdown();

            }
            else {
                $('#loadingBar').removeClass("is-active");
                processErrorCode(code, json);
            }
        }

        ///////////////////////////////////////////
        /// FORM CONTROLS & EVENTS
        //////////////////////////////////////////

        /**
         *  Click function for Signing CAdES File
         */
        $(document).on('click', '#btnSignCAdESFile', function () {

            var _pincode = $('#pinCode').val();

            if (!$('#dropdownCihazlar').val().match(/\S/)) {
                console.log("cihaz yok");
                return;
            }

            if (!$('#dropdownSertifikalar').val().match(/\S/)) {
                                console.log("Lütfen Sertifika Seçiniz.", "Uyarı");
                return;
            }

            if (_pincode == "") {
                console.log("Pin Kodu Alanı Boş Geçilemez.", "Uyarı");
                return;
            }


            var cihazVal = $('#dropdownCihazlar').val();
            var _slotId = cihazVal.split(",")[0];
            var _library = cihazVal.split(",")[1];
            var _certValue = $('#dropdownSertifikalar').val().split(',');
            var _certSerialNumber = _certValue[0];
            var _certBase64 = _certValue[1];

            var signatureTypeList = document.getElementById("signatureType");
            var signatureType = signatureTypeList.options[signatureTypeList.selectedIndex].value;
            if (signatureType == "bes") {
                signatureType = 1;
            }
            else if (signatureType == "est") {
                signatureType = 3;
            }
            else if (signatureType == "xl") {
                signatureType = 5;
            }
            else if (signatureType == "av2") {
                signatureType = 6;
            }
            else {
                 console.log("Geçersiz imza tipi.", "Uyarı");
                return;
            }
            $('#loadingBar').removeClass("is-active");
            $('#loadingBar').attr("data-curtain-text", "CAdES imzanız oluşturuluyor...");
            $('#loadingBar').addClass("is-active");
            $.ajax({
                url: "cades",
                method: "POST",
                data: {
                    'action': 'initialize-signing',
                    'certificateBase64': _certBase64,
                    'signatureType': signatureType
                },
                dataType: "json",
                success: function (resultInitializeSigning) {
                    if (resultInitializeSigning.success === true) {
                        var digestToSignBase64 = resultInitializeSigning.digestBase64;

                        pwsigner.smartCard.signPKCS1Padding1(function (code, json) {
                            var obj = JSON.parse(json);
                            var cadesSignatureBase64 = obj[0].signature;

                            if (code == PWSigner.prototype.codes.RESPONSE_SUCCESSFUL) {
                                $('#loadingBar').removeClass("is-active");
                                $('#loadingBar').attr("data-curtain-text", "CAdES imza tamamlanıyor...");
                                $('#loadingBar').addClass("is-active");
                                $.ajax({
                                    url: "cades",
                                    method: "POST",
                                    data: {
                                        'action': 'finalize-signing',
                                        'transactionUUID': resultInitializeSigning.transactionUUID,
                                        'signatureBase64': cadesSignatureBase64
                                    },
                                    dataType: "json",
                                    success: function (resultFinalizeSigning) {
                                        $('#loadingBar').removeClass("is-active");
                                        if (resultFinalizeSigning.success === true) {
                                            swal({
                                                title: 'Bilgilendirme',
                                                text: "Başarıyla imza atılmıştır. Atılan imzayı sunucudan kontrol edebilirsiniz.",
                                                type: 'success',
                                                showCancelButton: false,
                                                confirmButtonColor: '#3085d6',
                                                cancelButtonColor: '#d33',
                                                confirmButtonText: 'Tamam'
                                            });
                                            $("#itxtPinCode").val("");

                                            $('#btnDownloadCAdES').show().on('click', function () {
                                                window.location.href = resultFinalizeSigning.downloadHref;
                                            });
                                        } else {
                                            $('#loadingBar').removeClass("is-active");
                                            console.log("İmzalama sırasında bir sorun ile karşılaşılmıştır.1", "Hata");
                                        }
                                    },
                                    error: function (resultFinalizeSigning) {
                                        $('#loadingBar').removeClass("is-active");
                                        console.log("İmzalama sırasında bir sorun ile karşılaşılmıştır.2", "Hata");
                                    }
                                });
                            } else {
                                $('#loadingBar').removeClass("is-active");
                                console.log("İmza atılırken bir sorun ile karşılaşılmıştır.", "Hata");
                                console.log(json);
                            }
                        }, {
                                library: _library,
                                slotId: _slotId,
                                certSerialNumber: _certSerialNumber,
                                dataBase64: digestToSignBase64,
                                pincode: _pincode,
                                addSigningTime: true
                            });
                    } else {
                        $('#loadingBar').removeClass("is-active");
                        console.log("İmza atılırken bir sorun ile karşılaşılmıştır.", "Hata");
                        console.log(json);
                    }
                },
                error: function (result) {
                    console.log(result);
                    $('#loadingBar').removeClass("is-active");
                    console.log("CAdES imza oluşturulamamaktadır.", "Hata");
                }
            });


        }); // end of CAdES File Click

        $(document).on('click', '#cihazlar li a', function (e) {

            $("#dropdownCihazlar:first-child").text($(this).text());
            $("#dropdownCihazlar:first-child").val($(this).attr('name'));

            var cihazVal = $(this).attr('name');
            var _slotId = cihazVal.split(",")[0];
            var _library = cihazVal.split(",")[1];

            $('#sertifikalar').empty();

            pwsigner.smartCard.listCertificates(onPWSigner_ListCertificates, {
                library: _library,
                slotId: _slotId
            });

        });

        $(document).on('click', '#sertifikalar li a', function (e) {
            $("#dropdownSertifikalar:first-child").text($(this).text());
            $("#dropdownSertifikalar:first-child").val($(this).attr('name'));


        });

    </script>




